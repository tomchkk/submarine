#!/usr/bin/env bash


__script_dir="$(dirname "${BASH_SOURCE[0]}")"
source "$__script_dir/../../../../bootstrap"

__strategy="$__src_dir/service/version/constraint/strategy/logical-strategy"
__version_examiner="$__src_dir/service/version/version-examiner"

logical_strategy_test::test_equals() {
    local actual

    source "$__strategy" "=1.0" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "2.0"; echo $?)
    bash_test::assert_equals 1 $actual
}

logical_strategy_test::test_not_equals() {
    local actual

    source "$__strategy" "!=1.0" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "2.0"; echo $?)
    bash_test::assert_equals 0 $actual
}

logical_strategy_test::test_less_than() {
    local actual

    source "$__strategy" "<1.0" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.0"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "2.0.0"; echo $?)
    bash_test::assert_equals 1 $actual
}

logical_strategy_test::test_less_than_or_equal() {
    local actual

    source "$__strategy" "<=1.0" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "2.0.0"; echo $?)
    bash_test::assert_equals 1 $actual
}

logical_strategy_test::test_greater_than() {
    local actual

    source "$__strategy" ">1.0" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.0"; echo $?)
    bash_test::assert_equals 1 $actual

    # N.B. this failure is expected
    actual=$(constraint_strategy::is_satisfied_by "1.0.1"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.1.1"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "100.0.0"; echo $?)
    bash_test::assert_equals 0 $actual
}

logical_strategy_test::test_greater_than_or_equal() {
    local actual

    source "$__strategy" ">=1.0" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.1"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.1.1"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "100.0.0"; echo $?)
    bash_test::assert_equals 0 $actual
}

logical_strategy_test::test_expressions() {
    local actual

    source "$__strategy" ">=1.0,<1.1" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.1"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 1 $actual

    source "$__strategy" ">=1.0,!=2.0" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "2.0"; echo $?)
    bash_test::assert_equals 1 $actual

    actual=$(constraint_strategy::is_satisfied_by "2.1.0"; echo $?)
    bash_test::assert_equals 0 $actual

    source "$__strategy" ">=1.0,<1.1||>=1.2" "$__version_examiner"

    actual=$(constraint_strategy::is_satisfied_by "1.0.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "1.0.1"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "2.0.0"; echo $?)
    bash_test::assert_equals 0 $actual

    actual=$(constraint_strategy::is_satisfied_by "0.1.0"; echo $?)
    bash_test::assert_equals 1 $actual
}
