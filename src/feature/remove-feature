#!/usr/bin/env bash

source "$service/autoload-service"
source "$service/submodule-service"

##
# Removes all registered submodules.
##
remove_feature::remove_all() {
    for path in $(submodule_service::get_configured_paths); do
        __remove_feature::remove $path
    done
}

##
# Removes the given submodule paths or names.
##
remove_feature::remove_named() {
    local submodules=$@

    for submodule in ${submodules[@]}; do
        local path=$(submodule_service::get_path_for_value "$submodule")

        if [[ -z $path ]] ; then
            echo "The submodule '$submodule' is not installed!"

            echo "Configured submodule paths:"
            for path in $(submodule_service::get_configured_paths); do
                echo " - $path"
            done

            return 1
        fi

        __remove_feature::remove $path
    done
}

##
# Removes the given submodule.
##
__remove_feature::remove() {
    local path=${1:?"A submodule path is required"}

    echo "Removing submodule: '$path'"

    submodule_service::force_remove_repo $path
    submodule_service::remove_path_directories $path
    submodule_service::force_remove_index $path

    local remaining=($(submodule_service::get_configured_paths))
    if [[ ${#remaining[@]} -eq 0 ]]; then
        autoload_service::remove
        submodule_service::remove_config
    fi
}
